// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagement.API.Data;

#nullable disable

namespace SchoolManagement.API.Migrations
{
    [DbContext(typeof(SchoolManagementDbContext))]
    [Migration("20240802133052_Add new table")]
    partial class Addnewtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.DriverDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("DriverMobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DriverDetails");
                });

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.FeeTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("AmountToBe")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FeeTerms");
                });

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.StudentFeesDetails", b =>
                {
                    b.Property<int>("FeeTermAmount")
                        .HasColumnType("int");

                    b.Property<int>("FeeTermId")
                        .HasColumnType("int");

                    b.Property<int>("FeeTermsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasIndex("FeeTermsId");

                    b.ToTable("StudentFeesDetails");
                });

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.StudentTransport", b =>
                {
                    b.Property<string>("Drop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickUp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.ToTable("StudentTransport");
                });

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<long>("MobileNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriverDetailsId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.StudentFeesDetails", b =>
                {
                    b.HasOne("SchoolManagement.API.Models.Domain.FeeTerms", "FeeTerms")
                        .WithMany()
                        .HasForeignKey("FeeTermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeeTerms");
                });

            modelBuilder.Entity("SchoolManagement.API.Models.Domain.Students", b =>
                {
                    b.HasOne("SchoolManagement.API.Models.Domain.DriverDetails", "DriverDetails")
                        .WithMany()
                        .HasForeignKey("DriverDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
